#!/bin/bash

#   ---------------------------------------------------------------------- copyright and license ---
#
#   File: test/list-keys.test
#
#   Copyright ðŸ„¯ 2014, 2016â€”2017, 2019â€”2023 Van de Bugger.
#
#   This file is part of Tapper.
#
#   Tapper is free software: you can redistribute it and/or modify it under the terms of the GNU
#   General Public License as published by the Free Software Foundation, either version 3 of the
#   License, or (at your option) any later version.
#
#   Tapper is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
#   even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   General Public License for more details.
#
#   You should have received a copy of the GNU General Public License along with Tapper.  If not,
#   see <https://www.gnu.org/licenses/>.
#
#   SPDX-License-Identifier: GPL-3.0-or-later
#
#   ---------------------------------------------------------------------- copyright and license ---

eval "$PROLOGUE"

done=0

function check() {
    local rc
    local listener=$1
    shift 1
    [[ $# -gt 0 ]] || die "oops"
    run ./tapper --no-load-settings --no-default-assignments --$listener --list-keys
    for key in "$@"; do
        egrep -e $key $tmpfile.out
    done
    say "â€¦ok" ""
    done=$(( done + 1 ))
}

for listener in libinput xrecord; do

    say "Listener: $listener" ""

    if [[ $listener == "libinput" && -z $WITH_LIBINPUT ]]; then
        say "â€¦skipped: libinput is disabled." ""
        continue
    fi
    if [[ $listener == "xrecord" ]]; then
        if [[ -z $WITH_X ]]; then
            say "â€¦skipped: X Window System is disabled." ""
            continue
        fi
        if ! is_x_session; then
            say "â€¦skipped: X session is not detected." ""
            continue
        fi
    fi

    case $listener in
        ( libinput )    keys=( KEY_LEFTSHIFT KEY_RIGHTSHIFT KEY_LEFTCTRL KEY_RIGHTCTRL ) ;;
        ( xrecord )     keys=( LFSH RTSH LCTL RCTL );;
        ( * )           die "oops";;
    esac

    check $listener "${keys[@]}"

done

[[ $done -gt 0 ]] || skip "All checks skipped."
say "$done checks made."

# end of file #
